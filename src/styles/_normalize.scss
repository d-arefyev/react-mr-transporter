/* Normalise -------------------------------------------------- */
/**
  Normalization of the block model
 */
 *,
 *::before,
 *::after {
   box-sizing: border-box;
 }
 
 /**
  Remove internal left margins for list tags that have a class attribute
  */
 :where(ul, ol):where([class]) {
   padding-left: 0;
 }
 
 /**
  Remove the outer padding from the body and two other tags that have the class attribute.
  */
 body,
 :where(blockquote, figure):where([class]) {
   margin: 0;
 }
 
 /**
  We remove the outer vertical indents for the necessary tags that have the class attribute
  */
 :where(h1,
   h2,
   h3,
   h4,
   h5,
   h6,
   p,
   ul,
   ol,
   dl):where([class]) {
   margin-block: 0;
 }
 
 :where(dd[class]) {
   margin-left: 0;
 }
 
 :where(fieldset[class]) {
   margin-left: 0;
   padding: 0;
   border: none;
 }
 
 /**
  Remove the standard marker from a bulleted list that has a class attribute
  */
 :where(ul[class]) {
   list-style: none;
 }
 
 /**
  Zero out the vertical margins of the paragraph, declare a local variable for the margin down,
  to avoid interaction with a more complex selector
  */
 p {
   /* --paragraphMarginBottom: 24px; */
 
   margin-block: 0;
 }
 
 /**
  The outer margin down for a paragraph without a class attribute that is not the last among its neighbors
  */
 p:where(:not([class]):not(:last-child)) {
   margin-bottom: var(--paragraphMarginBottom);
 }
 
 
 /**
  Making it easier to work with images
  */
 img {
   display: block;
   max-width: 100%;
 }
 
 /**
  Inherit font properties for input fields
  */
 input,
 textarea,
 select,
 button {
   font: inherit;
 }
 
 html {
/**
  It will be useful in most situations (for example, when you need to "press" 
  the footer to the bottom of the site)
  */
   height: 100%;
 }
 
 /**
  Smooth scrolling
  */
 html,
 :has(:target) {
   scroll-behavior: smooth;
 }
 
 body {
/**
  It will be useful in most situations (for example, when you need to "press" 
  the footer to the bottom of the site)
  */
   min-height: 100%;
/**
  Unified leading
  */
  line-height: 1.5;
 }
 
 /**
  Bringing svg elements to a single color
  */
 svg *[fill] {
   fill: currentColor
 }
 
 svg *[stroke] {
   stroke: currentColor
 }
 
 /**
  Fixing a bug with delayed color change when interacting with svg elements
  */
 svg * {
   transition-property: fill, stroke;
 }


 